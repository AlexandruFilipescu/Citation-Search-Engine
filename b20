@inproceedings{Gadi20a,
author={Gadient, Pascal and Ghafari, Mohammad and Tarnutzer, Marc-Andrea and Nierstrasz, Oscar},
booktitle={27th edition of the IEEE International Conference on Software Analysis, Evolution and Reengineering (SANER)},
title={Web {APIs} in {Android} through the Lens of Security},
year={2020},
Annote    = {internationalconference},
PeerReview = {yes},
Medium = {2},
abstract={Web communication has become an indispensable characteristic of mobile apps. However, it is not clear what data the apps transmit, to whom, and what consequences such transmissions have. We analyzed the web communications found in mobile apps from the perspective of security. We first manually studied 160 Android apps to identify the commonly-used communication libraries, and to understand how they are used in these apps. We then developed a tool to statically identify web API URLs used in the apps, and restore the JSON data schemas including the type and value of each parameter. We extracted 9,714 distinct web API URLs that were used in 3,376 apps. We found that developers often use the java.net package for network communication, however, third-party libraries like OkHttp are also used in many apps. We discovered that insecure HTTP connections are seven times more prevalent in closed-source than in open-source apps, and that embedded SQL and JavaScript code is used in web communication in more than 500 different apps. This finding is devastating; it leaves billions of users and API service providers vulnerable to attack.},
keywords={scg-pub security snf-asa3 scg20 jb20 snf-imad},
doi = {10.1109/SANER48275.2020.9054850},
pages = {},
month=mar,
Url={http://scg.unibe.ch/archive/papers/Gadi20a.pdf}
}

@inproceedings{Hazh20a,
	author={Mohammadreza Hazhirpasand and Mohammad Ghafari and Oscar Nierstrasz},
	booktitle={27th edition of the IEEE International Conference on Software Analysis, Evolution and Reengineering (SANER)},
	title={{CryptoExplorer}: An Interactive Web Platform Supporting Secure Use of Cryptography {APIs}},
	year={2020},
	Annote    = {internationalconference},
	PeerReview = {yes},
	Medium = {2},
	abstract={Research has shown that cryptographic APIs are hard to use.
		Consequently, developers resort to using code examples available in
		online information sources that are often not secure. We have
		developed a web platform, named CryptoExplorer, stocked with
		numerous real-world secure and insecure examples that developers
		can explore to learn how to use cryptographic APIs properly. This
		platform currently provides 3 263 secure uses, and 5 897 insecure
		uses of Java Cryptography Architecture mined from 2 324 Java
		projects on GitHub. A preliminary study shows that CryptoExplorer
		provides developers with secure crypto API use examples instantly,
		developers can save time compared to searching on the internet for
		such examples, and they learn to avoid using certain algorithms in
		APIs by studying misused API examples. We have a pipeline to
		regularly mine more projects, and, on request, we offer our dataset
		to researchers.},
	keywords={scg-pub security snf-asa3 scg20 jb20 snf-imad},
	doi = {10.1109/SANER48275.2020.9054799},
	pages={632--636},
	month=mar,
	Url={http://scg.unibe.ch/archive/papers/Hazh20a.pdf}
}

@inproceedings{Hazh20b,
author = {Hazhirpasand, Mohammadreza and Ghafari, Mohammad and Nierstrasz, Oscar},
title = {Tricking {Johnny} into Granting Web Permissions},
PeerReview = {yes},
abstract={We studied the web permission API dialog box in popular mobile and desktop
	browsers, and found that it typically lacks measures to protect users
	from unwittingly granting web permission when clicking too fast. We
	developed a game that exploits this issue, and tricks users into granting
	webcam permission. We conducted three experiments, each with 40 different
	participants, on both desktop and mobile browsers. The results indicate
	that in the absence of a prevention mechanism, we achieve a considerably
	high success rate in tricking 95\% and 72\% of participants on mobile and
	desktop browsers, respectively. Interestingly, we also tricked 47\% of
	participants on a desktop browser where a prevention mechanism exists.},
year = {2020},
isbn = {9781450377317},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
doi = {10.1145/3383219.3383248},
booktitle = {Proceedings of the Evaluation and Assessment in Software Engineering},
pages = {276--281},
numpages = {6},
keywords = {scg-pub security snf-asa3 scg20 jb20 snf-imad},
location = {Trondheim, Norway},
series = {EASE 2020},
Medium = {2},
Url={http://scg.unibe.ch/archive/papers/Hazh20b.pdf}
}

@inproceedings{Hazh20c,
	author={Hazhirpasand, Mohammadreza and Ghafari, Mohammad and Nierstrasz, Oscar},
	booktitle={Proceedings of the 14th ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM)},
	title={Java Cryptography Uses in the Wild},
	year={2020},
	annote={internationalconference},
	peerreview={yes},
	medium={2},
	doi={10.1145/3382494.3422166},
	abstract={[Background] Previous research has shown that developers commonly misuse cryptography APIs. [Aim] We have conducted an exploratory study to find out how crypto APIs are used in open-source Java projects, what types of misuses exist, and why developers make such mistakes. [Method] We used a static analysis tool to analyze hundreds of open-source Java projects that rely on Java Cryptography Architecture, and manually inspected half of the analysis results to assess the tool results. We also contacted the maintainers of these projects by creating an issue on the GitHub repository of each project, and discussed the misuses with developers. [Results] We learned that 85\% of Cryptography APIs are misused, however, not every misuse has severe consequences. Developer feedback showed that security caveats in the documentation of crypto APIs are rare, developers may overlook misuses that originate in third-party code, and the context where a Crypto API is used should be taken into account. [Conclusion] We conclude that using Crypto APIs is still problematic for developers but blindly blaming them for such misuses may lead to erroneous conclusions.},
	numpages={6},
	keywords={scg-pub security snf-asa3 scg20 jb20 snf-imad},
	Url={http://scg.unibe.ch/archive/papers/Hazh20c.pdf}
}

@inproceedings{Hazh21a,
	author={Hazhirpasand, Mohammadreza and Ale Ebrahim, Arash and Nierstrasz, Oscar},
	booktitle={Proceedings of the 7th International Conference on Information Systems Security and Privacy - ICISSP},
	title={Stopping DNS Rebinding Attacks in the Browser},
	year={2021},
	annote={internationalconference},
	peerreview={yes},
	medium={2},
	doi={10.5220/0010310705960603},
	abstract={DNS rebinding attacks circumvent the same-origin policy of browsers and severely jeopardize user privacy. Although recent studies have shown that DNS rebinding attacks pose severe security threats to users, up to now little effort has been spent to assess the effectiveness of known solutions to prevent such attacks. We have carried out such a study to assess the protective measures proposed in prior studies. We found that none of the recommended techniques can entirely halt this attack due to various factors, e.g., network layer encryption renders packet inspection infeasible. Examining the previous problematic factors, we realize that a protective measure must be implemented at the browser-level. Therefore, we propose a defensive measure, a browser plug-in called Fail-rebind, that can detect, inform, and protect users in the event of an attack. Afterwards, we discuss the merits and limitations of our method compared to prior methods. Our findings suggest that Fail-rebind does not nec essitate expert knowledge, works on different OSes and smart devices, and is independent of networks and location.},
	numpages={8},
	keywords={scg-pub security snf-asa3 scg20 jb20 snf-imad},
	Url={http://scg.unibe.ch/archive/papers/Hazh21a.pdf}
}

@inproceedings{Patk20a,
author = {Patkar, Nitish and Ghafari, Mohammad and Nierstrasz, Oscar and Hotomski, Sofija},
title = {Caveats in Eliciting Mobile App Requirements},
year = {2020},
peerreview={yes},
abstract={Factors such as app stores or platform choices heavily affect functional and non-functional mobile app requirements. We surveyed 45 companies and interviewed ten experts to explore how factors that impact mobile app requirements are understood by requirements engineers in the mobile app industry.
We observed the lack of knowledge in several areas. For instance, we observed that all practitioners were aware of data privacy concerns, however, they did not know that certain third-party libraries, usage aggregators, or advertising libraries also occasionally leak sensitive user data. Similarly, certain functional requirements may not be implementable in the absence of a third-party library that is either banned from an app store for policy violations or lacks features, for instance, missing desired features in ARKit library for iOS made practitioners turn to Android.
We conclude that requirements engineers should have adequate technical experience with mobile app development as well as sufficient knowledge in areas such as privacy, security and law, in order to make informed decisions during requirements elicitation.
},
isbn = {9781450377317},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {http://scg.unibe.ch/archive/papers/Patk20.pdf},
doi = {10.1145/3383219.3383238},
booktitle = {Proceedings of the Evaluation and Assessment in Software Engineering},
pages = {180--189},
numpages = {10},
keywords = {scg-pub  snf-asa3 scg20 jb20 snf-imad},
location = {Trondheim, Norway},
series = {EASE 2020},
Medium = {2},
Url={http://scg.unibe.ch/archive/papers/Patk20.pdf}
}

@inproceedings{Patk20b,
author    = {Nitish Patkar and Leonel Merino and Oscar Nierstrasz},
title     = {Towards requirements engineering with immersive augmented reality},
peerreview={yes},
abstract={Often, requirements engineering (RE) activities demand project stakeholders to communicate and collaborate with each other towards building a common software product vision. We conjecture that augmented reality (AR) can be a good fit to support such communication and collaboration. In this vision paper, we report on state-of-the-art research at the intersection of AR and RE. We found that requirements elicitation and analysis have been supported by the ability of AR to provision on-the-fly information such as augmented prototypes. We discuss and map the existing challenges in RE to the aspects of AR that can boost the productivity and user experience of existing RE techniques. Finally, we elaborate on various envisioned usage scenarios in which we highlight concrete benefits and challenges of adopting immersive AR to assist project stakeholders in RE activities.
  },
booktitle = {Proc.\ Programming'20 Companion},
publisher = {ACM},
pages     = {55--60},
doi       = {10.1145/3397537.3398472},
year      = {2020},
url = {http://scg.unibe.ch/archive/papers/Patk20b.pdf},
keywords = {scg-pub  snf-asa3 scg20 jb20 snf-imad},
Medium = {2}
}

@inproceedings{Patk20c,
author    = {Nitish Patkar},
title     = {Moldable requirements},
peerreview={yes},
abstract={Separate tools are employed to carry out
individual requirements engineering (RE) activities.
The lack of integration among these tools scatters
the domain knowledge, making collaboration between
technical and non-technical stakeholders difficult, and
management of requirements a tedious task. In this
Ph.D. research proposal, we argue that an integrated
development environment (IDE) should support various
RE activities. For that, distinct stakeholders must
be able to effortlessly create and manage requirements
as first-class citizens within an IDE.
With "moldable requirements," developers create
custom hierarchies of requirements and build tailored
interfaces that enable other stakeholders to create
requirements and navigate between them. Similarly,
they create custom representations of requirements
and involved domain objects to reflect various levels
of detail. Such custom and domain-specific representations
assist non-technical stakeholders in accomplishing
their distinguished RE related tasks. The custom
interfaces make the IDE usable for non-technical
stakeholders and help to preserve requirements in one
place, closer to the implementation.},
booktitle = {Benevol'20},
year      = {2020},
url = {http://scg.unibe.ch/archive/papers/Patk20c.pdf},
keywords = {scg-pub missing-doi snf-asa3 scg20 jb20 snf-imad},
Medium = {2}
}

@inproceedings{Stul20b,
  title={Towards Detecting Inconsistent Comments in Java Source Code Automatically},
  author={Stulova, Nataliia and Blasi, Arianna and Gorla, Alessandra and Nierstrasz, Oscar},
  abstract={A number of tools are available to software developers to check consistency
		of source code during software evolution. However, none of these tools
		checks for consistency of the documentation accompanying the code. As a
		result, code and documentation often diverge, hindering program
		comprehension. This leads to errors in how developers use source code,
		especially in the case of APIs of reusable libraries. We propose a
		technique and a tool, upDoc, to automatically detect code-comment
		inconsistency during code evolution. Our technique builds a map between the
		code and its documentation, ensuring that changes in the code match the
		changes in respective documentation parts. We conduct a preliminary
		evaluation using inconsistency examples from an existing dataset of Java
		open source projects, showing that upDoc can successfully detect them. We
		present a roadmap for the further development of the technique and its
		evaluation.},
  booktitle={2020 IEEE 20th International Working Conference on Source Code Analysis and Manipulation (SCAM)},
  pages={65--69},
  year={2020},
  Keywords = {scg-pub snf-asa3 scg20 jb21},
  PeerReview = {yes},
  medium = {2},
  doi={10.1109/SCAM51674.2020.00012},
  url = {http://scg.unibe.ch/archive/papers/Stul20b-InconsistentComments.pdf},
  organization={IEEE}
}

